- name: Grafana | Install Postgres repo
  ansible.builtin.copy:
    dest: "/etc/apt/sources.list.d/pgdg.list"
    content: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        
- name: Grafana | Import Postgres Repo Key
  ansible.builtin.apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"

- name: Grafana | Install Web Server Packages
  ansible.builtin.apt:
    name: "{{ app_packages }}"
    state: latest
    update_cache: true

- name: Grafana | Configure HAProxy
  ansible.builtin.template:
    src: "templates/haproxy.cfg.j2"
    dest: "/etc/haproxy/haproxy.cfg"
  notify: restart haproxy

- name: Grafana | Reload haproxy
  ansible.builtin.systemd:
    name: haproxy
    state: reloaded
    daemon_reload: true

- name: Grafana | Create Database for Grafana
  community.postgresql.postgresql_db:
    name: "{{ db_name }}"
    owner: "{{ db_user }}"
    login_host: "127.0.0.1"
    login_user: "postgres"
    login_password: "postgres"
    port: "5432"
  run_once: true

- name: Grafana | Install Grafana Package
  ansible.builtin.apt:
    deb: "https://dl.grafana.com/oss/release/grafana_10.1.4_amd64.deb"
    state: present
  
- name: Grafana | Configure Grafana for use postgresql
  ansible.builtin.lineinfile:
     path: "/etc/grafana/grafana.ini"
     insertafter: "\\[database\\]"
     line: |
       type = postgres
       host = 127.0.0.1
       name = {{ db_name }}
       user = {{ db_user }}
       password = {{ db_pass }}
  notify: restart grafana

- name: Grafana | Check if Grafana is started
  ansible.builtin.systemd:
    name: grafana-server
    state: started
